---
title: "Presidential Sentiment of Inauguration Speeches"
format:
  html:
    toc: true
    number-sections: true
    echo: false
    keep-hidden: true
    code-tools: true
    self-contained: true
---

This document analysis the sentiment of presential inauguration speeches.


```{python .hidden}
import pandas as pd
import plotly.express as px
```


```{python .hidden}
df = pd.read_csv('data/df_concat.csv')

df_grouped = df[['source', 'stars']].groupby(['source', 'stars']).size().to_frame('count').reset_index()

```


# Results

## Graphs

::: {.panel-tabset}

### Trump

This is the polar graph for Trump's speech sentiment. The complete speech is represented by the complete circle.

```{python .hidden}
president = 'Trump'
fig = px.bar_polar(df[df['source']==president], r="stars", theta="direction",
                   color="stars", 
                   hover_name="text", 
                   color_discrete_sequence= px.colors.sequential.Plasma_r
                   )   
fig.show()
```

The graph shows the count of the different sentiments.

```{python .hidden}
fig = px.bar(df_grouped[df_grouped['source']==president],
             x="stars",  y="count", color="stars",
                   color_discrete_sequence= px.colors.sequential.Plasma_r
                   )   
fig.show()
```


### Biden

This is the graph for Biden's speech sentiment.

```{python .hidden}
president = 'Biden'
fig = px.bar_polar(df[df['source']==president], r="stars", theta="direction",
                   color="stars", 
                   hover_name="text", 
                   color_discrete_sequence= px.colors.sequential.Plasma_r
                   )
fig.show()
```

The graph shows the count of the different sentiments.

```{python .hidden}
fig = px.bar(df_grouped[df_grouped['source']==president],
             x="stars",  y="count", color="stars",
                   color_discrete_sequence= px.colors.sequential.Plasma_r
                   )   
fig.show()
```

:::

## Text and Sentiment

::: {.panel-tabset}

### Trump

This is the graph for Trump's speech sentiment.

```{python}
president = 'Trump'
df_filt = df.loc[df['source']==president, ['text', 'stars']].copy()
list(zip(df_filt['text'], df_filt['stars']))
```


### Biden

This is the graph for Biden's speech sentiment.

```{python}
president = 'Biden'
df_filt = df.loc[df['source']==president, ['text', 'stars']]
list(zip(df_filt['text'], df_filt['stars']))
```

:::